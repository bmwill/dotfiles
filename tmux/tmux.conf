# -------------------
# Basic Options
# -------------------

# Use xterm for 256 color
set-option -g default-terminal "screen-256color"
#set-option -g default-terminal "xterm-256color"
#set-window-option -g xterm-keys on

set -g history-limit 10000

# set the command prefix to <C-a> and unbind the default
set-option -g prefix C-a
bind-key C-a send-prefix
bind-key a send-prefix
unbind-key C-b

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Start numbering at 1
set -g base-index 1
setw -g pane-base-index 1

# automatically renumber tmux windows
set -g renumber-windows on

# enable mouse scrolling inside of tmux
# Using the scroll wheel automatically switches to copy mode and scrolling back
# down to the prompt ends copy mode automatically
set -g mouse on

# ------------------
# Key Bindings
# ------------------

# No delay for escape key press
set -sg escape-time 0

# Reload tmux config
bind r source-file ~/.tmux.conf \; display "Config Reloaded!"

# bound to C-a by default
bind-key C-w last-window
bind-key w last-window

# to be more screen-friendly...
bind c new-window
bind C-c new-window
bind N new-window

# saner spliting
unbind-key '"'; unbind-key %
bind | split-window -h -c "#{pane_current_path}"
bind _ split-window -v -c "#{pane_current_path}"

# synchronize all panes in a window
bind S set synchronize-panes

# Vim style pane selection
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Resize pane shortcuts
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# toggle mouse mode to allow mouse copy/paste
bind m run "\
  tmux show-options -g | grep -q "mouse.*on"; \
  if [ \$? = 0 ]; \
  then  \
    toggle=off;  \
  else  \
    toggle=on;  \
  fi;  \
  tmux display-message \"mouse is now: \$toggle\";  \
  tmux set-option -w mouse \$toggle; \
  tmux set-option -g mouse \$toggle; \
  "

# make the key bindings work like VIM
# see key bindings with `list-keys -t vi-copy`
set -g status-keys vi
setw -g mode-keys vi
bind -T copy-mode-vi 'v' send -X begin-selection
bind -T copy-mode-vi 'y' send -X copy-pipe 'remote-pbcopy'
bind -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-no-clear 'remote-pbcopy'
bind -T copy-mode-vi MouseUp1Pane send -X clear-selection
bind v copy-mode
bind p paste-buffer

# toggle zoom pane
bind z resize-pane -Z

# ------------------
# Theme
# ------------------

# Colors
tm_color_feature=colour198
tm_color_music=colour41
tm_color_red=colour196
tm_color_orange=colour166

tm_color_active_fg=colour81 #51 brightred color_active 39 33
tm_color_active_bg=colour238
tm_color_inactive_fg=colour138 # 241 138 238 black color_inactive 245 235 166
tm_color_inactive_bg=colour235

tm_color_message_fg=colour235 #base02 235 yellow default black
tm_color_message_bg=colour166 #166orange 232 16

tm_color_status_fg=colour137 #white 136 12
tm_color_status_bg=colour234 #235 black default

# The modes {
setw -g clock-mode-colour $tm_color_active_fg #colour64 #colour135
# Style of copy mode
setw -g mode-style fg=$tm_color_red,bg=$tm_color_active_bg,bold
# }

# Set title of client terminal
set -g set-titles on
set -g set-titles-string "#{b:pane_current_path} - #W"

# Messages {
set -g message-style fg=$tm_color_message_fg,bg=$tm_color_message_bg,bold
set -g message-command-style fg=$tm_color_message_fg,bg=$tm_color_message_bg,reverse
# }

# Panes {
set -g pane-active-border-style fg=$tm_color_active_fg,bg=default
set -g pane-border-style fg=$tm_color_inactive_fg,bg=default

# pane number display
set-option -g display-panes-active-colour $tm_color_active_fg
set-option -g display-panes-colour $tm_color_inactive_fg

# }

# Windows {
# Automatically set window title
setw -g automatic-rename on

setw -g window-status-current-style fg=$tm_color_active_fg,bg=$tm_color_active_bg,bold
setw -g window-status-current-format " #I#[fg=colour250]:#[fg=colour255]#W#[fg=$tm_color_active_fg]#F "

setw -g window-status-style fg=$tm_color_inactive_fg,bg=$tm_color_inactive_bg,none
setw -g window-status-format " #I#[fg=colour237]:#[fg=colour250]#W#[fg=$tm_color_inactive_fg]#F "

# Activity monitoring
setw -g monitor-activity off
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
set -g bell-action any

setw -g window-status-bell-style fg=$tm_color_red,bg=black,bold
setw -g window-status-activity-style fg=$tm_color_red,bg=black,bold

# }

# Status Bar {
set -g status-position bottom
set -g status-justify left
set -g status-left-length 20
set -g status-right-length 50
set -g status-interval 15

set -g status-style fg=$tm_color_status_fg,bg=$tm_color_status_bg,none

tm_host="#[fg=$tm_color_orange,bold]#h"
tm_date="#[fg=colour233,bg=colour241,bold] %m/%d"
tm_clock="#[fg=colour233,bg=colour245,bold]%l:%M %p"
tm_battery="#(battery-life)"
tm_load="#[fg=$tm_color_feature]#(loadavg)"
tm_session_name="#[fg=$tm_color_feature,bold] #S"
tm_mode_format="#[fg=$tm_color_message_fg,bg=$tm_color_message_bg]"
tm_prefix="$tm_mode_format#{?client_prefix,<Prefix>,}"
tm_mode="$tm_mode_format#{?pane_in_mode,<Mode>,}"

set -g status-left  "$tm_prefix$tm_mode"
set -g status-right "$tm_host $tm_load $tm_battery $tm_date $tm_clock"

# }

# vim: filetype=sh
