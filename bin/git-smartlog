#!/usr/bin/env ruby

@format = "%C(auto)%h %s%d"
@max_commits = 50
@revs = ""

# Get all local branches
def localBranches()
  return `git for-each-ref --format='%(refname:short)' refs/heads/`.split
end

def add_to_revs(branch)
  upstream = `git rev-parse --abbrev-ref --symbolic-full-name \
              #{branch}@{u} 2>/dev/null`.strip
  upstream = "master" if !$?.success?

  range = "#{upstream}...#{branch}"
  if `git rev-list #{range} | wc -l`.to_i <= @max_commits
    @revs += "#{range} "
  end
end

def printGraph()
  if `git rev-list #{@revs} | wc -l`.to_i == 0
    system("git log --oneline --graph --decorate --pretty='#{@format}' -1 HEAD")
  else
    system("git log --oneline --graph --decorate --boundary --pretty='#{@format}' #{@revs}")
  end
end

# Check if inside gitdir
def inGitDir()
  if !system("git rev-parse --is-inside-gitdir &>/dev/null")
    abort "Not in gitdir"
  end
end

# Program start
inGitDir

# Option parsing
if ARGV.length > 0
  case ARGV[0]
  when "head", "--head"
    add_to_revs "HEAD"
  else
    abort "Incorrect option"
  end
else
  localBranches.each do |branch|
    add_to_revs branch
  end
end

printGraph
