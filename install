#!/bin/sh

# Install symlinks from the dotfile directory to the user's homedir

dir=$(CDPATH= cd -- "$(dirname -- "$0")" && pwd)

info() {
  printf "\r  [ \033[00;34m..\033[0m ] $1\n"
}

user() {
  printf "\r  [ \033[0;33m??\033[0m ] $1\n"
}

success() {
  printf "\r\033[2K  [ \033[00;32mOK\033[0m ] $1\n"
}

fail() {
  printf "\r\033[2K  [\033[0;31mFAIL\033[0m] $1\n"
}

link() {
	local src="$1"
	local dst="$2"

	# check if the file or directory exists
	if [ -d "$dst" ] || [ -f "$dst" ]; then
		# Skip linking
		fail "$dst already exists; skipping..."
	else
		# Link the file/directory
		ln -s "$src" "$dst" && success "Link from $src to $dst created"
	fi
}

info "Installing Dotfiles"

# ---- zsh ------------------------------------------------------------
link "$dir/zsh/.zshenv" ~/.zshenv
link "$dir/zsh" ~/.zsh
touch ~/.zshrc.local

# ---- vim ------------------------------------------------------------
link "$dir/vim" ~/.vim

# ---- tmux -----------------------------------------------------------
link "$dir/tmux/tmux.conf" ~/.tmux.conf

# ---- mutt -----------------------------------------------------------
link "$dir/mutt" ~/.mutt

# ---- git ------------------------------------------------------------
info 'setting up git'
link "$dir/git/gitignore" ~/.gitignore
link "$dir/git/gitconfig" ~/.gitconfig
if [ ! -f ~/.gitconfig.local ]; then
	user ' - What is your github author name?'
	read -e git_authorname
	user ' - What is your github author email?'
	read -e git_authoremail

	sed -e "s/AUTHORNAME/$git_authorname/g" \
		-e "s/AUTHOREMAIL/$git_authoremail/g" \
		"$dir/git/gitconfig.local" >~/.gitconfig.local

fi

# ---- homebrew -------------------------------------------------------
"$dir/homebrew/install-homebrew"

echo "  Finished!"
