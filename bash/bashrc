#####################################################################
#   bashrc                                                          #
#   Sets up the bash environment                                    #
#                                                                   #
#   Author: Brandon Williams                                        #
#####################################################################

# Load the shell dotfiles, and then some:
# * ~/.path can be used to extend $PATH
# * ~/.bash_prompt is used to setup the prompt $PS1
# * ~/.aliases is used to store aliases
for file in ~/.{path,bash_prompt,aliases}; do
  [ -r "$file" ] && [ -f "$file" ] && source "$file";
done;
unset file;

# Setup PATH
# Add personal Scripts to PATH
PATH="$HOME/dotfiles/bin:$PATH"

# Ctrl+X Ctrl+E to enter editor to edit a command
export EDITOR=vim
# Enable vi style normal mode
# Run 'bind -P' to see if mode has been applied correctly
#set -o vi

# Stop ctrl-s and ctrl-q from sending START/STOP signals
stty -ixon -ixoff

# must press ctrl-D 2+1 times to exit shell
export IGNOREEOF="2"

# Append to the Bash history file, rather than overwriting it
shopt -s histappend

# Increase Bash history size to 2^15
export HISTSIZE='32768'
export HISTFILESIZE="${HISTSIZE}"

# History Control
# Ignore duplicates and commands that begin with a space
export HISTCONTROL='ignoredups:ignorespace'

# Add tab completion for many Bash commands
if brew --version >/dev/null 2>&1; then
    if [ -f $(brew --prefix)/etc/bash_completion ]; then
        source $(brew --prefix)/etc/bash_completion
    fi

    # Autocomplete git commands
    if [ -f $(brew --prefix)/etc/bash_completion.d/git-completion.bash ]; then
        source $(brew --prefix)/etc/bash_completion.d/git-completion.bash
    fi
else
    if [ -f "$HOME/tools/git/contrib/completion/git-completion.bash" ]; then
        source "$HOME/tools/git/contrib/completion/git-completion.bash"
    fi
fi

# Enable FZF completion
[ -f ~/.fzf.bash ] && source ~/.fzf.bash

# Add tab completion for SSH hostnames based on ~/.ssh/config, ignoring wildcards
[ -e "$HOME/.ssh/config" ] && complete -o "default" -o "nospace" -W "$(grep "^Host" ~/.ssh/config | grep -v "[?*]" | cut -d " " -f2- | tr ' ' '\n')" scp sftp ssh;

# Add tab completion for `defaults read|write NSGlobalDomain`
complete -W "NSGlobalDomain" defaults

# Add `killall` tab completion for common apps
complete -o "nospace" -W "Contacts Calendar Dock Finder Mail Safari iTunes SystemUIServer Terminal" killall
